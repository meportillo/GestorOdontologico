<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">



	<tx:annotation-driven transaction-manager="persistence.transactionManager"
		proxy-target-class="true" />

	<!-- ========================= GENERAL DEFINITIONS ========================= -->
	<!-- Configurer that replaces ${...} placeholders with values from properties 
		files -->
	<!-- (in this case, mail and JDBC related properties) -->
	<bean id="persistence.propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:META-INF/hibernate.properties</value>
				<value>classpath*:META-INF/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="persistence.dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.db.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="defaultAutoCommit" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="initialSize" value="20" />
		<property name="maxActive" value="30" />
		<property name="maxIdle" value="25" />

	</bean>

	<!-- Defines a global session factory that will be used by all modules. -->
	<bean id="persistence.sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

		<property name="dataSource" ref="persistence.dataSource" />
		<!-- <property name="entityCacheStrategies" ref="persistence.hibernateClassCacheProperties" 
			/> <property name="collectionCacheStrategies" ref="persistence.hibernateCollectionCacheProperties" 
			/> -->

		<property name="hibernateProperties">
			<props>
				<!-- Configuration generic properties. They are loaded from file hibernate.properties -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<!-- Propiedades para la configuraciÃ³n de la cache de segundo nivel <prop 
					key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> 
					<prop key="hibernate.cache.use_second_level_cache">false</prop> <prop key="hibernate.cache.use_query_cache">true</prop> -->
				<prop key="hibernate.connection.autocommit">false</prop>
				<!-- prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory 
					</prop -->
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.tip.model</value>
			</list>
		</property>
	</bean>


	<!-- Transaction manager for a single JDBC DataSource -->
	<tx:annotation-driven />
	<bean id="persistence.transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>


	<bean name="persistence.jdbcExceptionTranslator"
		class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator">
		<constructor-arg>
			<ref bean="persistence.dataSource" />
		</constructor-arg>
	</bean>

	<!-- ________________________________________ -->
	<!-- ___________ Beans de negocio____________ -->
	<!-- ________________________________________ -->
	
	

		<!-- beans de ObraSocial -->
	
	<bean id="obraSocialRepo" class="com.tip.persistence.ObraSocialRepository">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>
	
		<!-- beans de ObraSocial -->

		<!-- beans de ObraSocial -->
	
	<bean id="dienteRepo" class="com.tip.persistence.DienteRepository">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>
	
		<!-- beans de ObraSocial -->

		<!-- beans de Paciente -->

	<bean id="pacienteRepo" class="com.tip.persistence.PacienteRepository">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>
	
		<!-- beans de Paciente -->
		

</beans>